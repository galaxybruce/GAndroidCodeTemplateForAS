
import android.content.Context;
import android.graphics.Rect;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.recyclerview.widget.RecyclerView;

import com.kidswant.annotation.router.Route;
import com.kidswant.common.base.BSBaseActivity;
import com.kidswant.common.utils.TitleUtils;
import com.kidswant.component.base.adapter.KWRecyclerLoadMoreAdapter;
import com.kidswant.component.base.adapter.RecyclerViewHolder;
import com.kidswant.component.util.statusbar.BBSStatusBarUtil;
import com.kidswant.component.view.titlebar.TitleBarLayout;
import com.linkkids.component.ui.view.bbsview.BBSRecyclerView2;

import org.jetbrains.annotations.Nullable;

${importR}
import ${package}.mvp.${name}Contract;
import ${package}.mvp.${name}Presenter;

@Route(path = "xxx")
public class ${name}Activity extends BSBaseActivity<${name}Contract.View, ${name}Presenter>
        implements ${name}Contract.View {

    private TitleBarLayout titleBar;
    private BBSRecyclerView2<Object> mBBSRecyclerView;
    private InnerAdapter mInnerAdapter;

    @Override
    protected ${name}Presenter createPresenter() {
        return new ${name}Presenter();
    }

    @Override
    public int getLayoutId() {
        return R.layout.${layoutName};
    }

    @Override
    public void initData(@Nullable Bundle bundle, @Nullable Bundle savedInstanceState) {
        super.initData(bundle, savedInstanceState);

        // todo init data from Intent
//        final Intent intent = getIntent();
//        String a = intent.getStringExtra("xxx");
    }

    @Override
    public void initView(View view) {
        super.initView(view);

        // init titleBar
        titleBar = findViewById(com.linkkids.component.R.id.title_bar);
        BBSStatusBarUtil.setTranslucentForWindow(this, titleBar, com.linkkids.component.R.drawable.titlebar_gradient_bg, true);
        TitleUtils.setDefaultTitleByNoBackgroud(titleBar, this, "xxx", null, true);

        // todo init view
        mBBSRecyclerView = findViewById(R.id.bbs_recyclerView);
        mInnerAdapter = new InnerAdapter(mContext);
        mBBSRecyclerView.setBbsAdapter(mInnerAdapter)
                //.setNeedShowEmptyNoData(false)
                .setPullRefreshEnable(true)
                .setRequestDataIfViewCreated(false)
                .setInitPage(1)
//                .setNoDataContent("暂无数据～")
//                .setNoDataImage(R.drawable.live_lottery_list_empty_icon)
//                .setRecyclerViewPadding(new Rect(0, DensityUtil.dp2px(12f), 0, DensityUtil.dp2px(12f)))
//                .addItemDecoration(SpacesItemDecoration(0, DensityUtil.dp2px(10f)))
                .setBbsRequestListener(new BBSRecyclerView2.BBSRequestListener() {
                    @Override
                    public void sendRequestData(boolean refresh, int page) {
                        performRequest();
                    }

                    @Override
                    public void sendRequestLoadMoreData(int page) {

                    }
                }).create();
    }

    @Override
    public void bindData(@Nullable Bundle savedInstanceState) {
        super.bindData(savedInstanceState);

        performRequest();
    }

    private void performRequest() {
        // todo perform net Requrest
        mPresenter.performRequest("xxx");
    }

    @Override
    public void handleRequestResult() {
        mBBSRecyclerView.getBbsExecuteListener().executeOnLoadDataSuccess(info != null ? info.list : null);
        mBBSRecyclerView.getBbsExecuteListener().executeOnLoadFinish();
    }

    private class InnerAdapter extends KWRecyclerLoadMoreAdapter<Object> {

        private static final int VIEW_TYPE_XXX = 0x2001f;

        public InnerAdapter(Context context) {
            super(context);
        }

        @Override
        public boolean needLoadMore() {
            return true;
        }

        @Override
        protected boolean showFooterViewOfHint() {
            return true;
        }

        @Override
        protected int getRealItemViewType(int position) {
            return VIEW_TYPE_XXX;
        }

        @Override
        public RecyclerView.ViewHolder onCreateRealViewHolder(ViewGroup viewGroup, int viewType) {
            if (viewType == VIEW_TYPE_XXX) {
                return new RecyclerViewHolder(mContext,
                        LayoutInflater.from(mContext)
                        .inflate(R.layout.xxx, viewGroup,false));
            }
            return super.onCreateRealViewHolder(viewGroup, viewType);
        }

        @Override
        public void onBindRealViewHolder(RecyclerView.ViewHolder holder, int dataPosition) {
            super.onBindRealViewHolder(holder, dataPosition);
            if (holder instanceof RecyclerViewHolder) {
                RecyclerViewHolder recyclerViewHolder = (RecyclerViewHolder) holder;

//                ((TextView)recyclerViewHolder.getView(com.linkkids.component.R.id.tv_choose))
//                        .setText("已选");
            }
        }

    }
}
