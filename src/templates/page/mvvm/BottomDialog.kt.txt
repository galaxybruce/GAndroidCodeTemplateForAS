
import android.os.Bundle
import android.os.Parcelable
import com.galaxybruce.component.ui.jetpack.JPBaseViewModel
import com.galaxybruce.component.ui.jetpack.JPDataBindingConfig
import com.galaxybruce.component.util.ToastUtils
import com.galaxybruce.component.ui.dialog.AppBottomDialog
import com.galaxybruce.component.ui.dialog.AppDialogCallback

${importR}
${importBR}
import ${package}.mvvm.viewmodel.${name}ViewModel
import ${modulePackage}.databinding.${name}Binding

/**
 * @date
 * @author
 * @description (亲，我是做什么的)
 *
 * 使用方式：
 * ${name}.Builder()
 *      .title("哈哈哈")
 *      .callback(object: ${name}.I${name}Callback {
 *           override fun on${name}Callback() {
 *           }
 *       })
 * .build().show(supportFragmentManager, "${name}")
 *
 * modification history:
 */
class ${name} : AppBottomDialog<${name}Binding>() {

    interface I${name}Callback : AppDialogCallback {
        fun on${name}Callback()
    }

    var mCallback: I${name}Callback? = null
    lateinit var mPageViewModel: ${name}ViewModel

    class Builder {
        var bundle: Bundle = Bundle()

        fun callback(value: Parcelable): Builder {
            bundle.putParcelable("callback", value)
            return this
        }

        fun title(value: String?): Builder {
            bundle.putString("title", value)
            return this
        }

        fun build(): ${name} {
            return ${name}().apply {
                arguments = bundle
            }
        }
    }

    override fun supportMVVM(): Boolean {
        return true
    }

    override fun initViewModel(): JPBaseViewModel {
        mPageViewModel = getFragmentViewModel(${name}ViewModel::class.java)
//        mParentViewModel = getActivityViewModel(LiveCreateViewModel.class);
        return mPageViewModel
    }

    override fun initDataBindConfig(): JPDataBindingConfig {
        return JPDataBindingConfig(bindLayoutId())
            .addBindingParam(BR.vm, mPageViewModel)
            .addBindingParam(BR.click, ClickProxy())
    }

    override fun bindLayoutId(): Int {
        return R.layout.${layoutName}
    }

    override fun initData(bundle: Bundle?, savedInstanceState: Bundle?) {
        // 获取listener
        mCallback = getDialogListener(this, I${name}Callback::class.java)
        bundle?.let {
            mCallback = it.getParcelable("callback")
            // todo sample code, please delete it
            mPageViewModel.title.set(it.getString("title"))
        }
    }

    override fun bindData(savedInstanceState: Bundle?) {
        // todo LiveData数据监听例子，实际代码请删除
        setLiveDataObserver(mPageViewModel.name) { s: String? ->
            ToastUtils.showToast(
                context, "name has changed"
            )
        }

        performRequest()

        if (mCallback != null) {
            mCallback!!.on${name}Callback()
        }
    }

    private fun performRequest() {
        mPageViewModel.request.performRequest("xxx")
    }

    /**
     * 页面事件类，可以把所有事件都写在这里
     */
    inner class ClickProxy {
        fun handleName() {
            ToastUtils.showToast(context, "handleName: " + mPageViewModel.name.value)
        }
    }
}