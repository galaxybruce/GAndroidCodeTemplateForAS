
import android.os.Bundle;
import com.galaxybruce.component.ui.jetpack.JPBaseViewModel;
import com.galaxybruce.component.ui.jetpack.JPDataBindingConfig;
import com.galaxybruce.component.ui.dialog.AppCustomConfirmDialog;
import com.galaxybruce.component.util.ToastUtils;

${importR};
${importBR};
import ${package}.mvvm.viewmodel.${name}ViewModel;
import ${modulePackage}.databinding.${name}Binding;

import org.jetbrains.annotations.Nullable;

/**
 * @date
 * @author
 * @description (亲，我是做什么的)
 *
 * 使用方式：
 * new ${name}.Builder()
 *      .title("哈哈哈")
 *      .build().show(getSupportFragmentManager(), "${name}");
 *
 * <p>
 * modification history:
 */
public class ${name} extends AppCustomConfirmDialog<${name}Binding> {

    public interface I${name}Callback {
        void on${name}Callback();
    }

    // todo sample code, please delete it 属性字段定义
    I${name}Callback mCallback;
    String mTitle;

    ${name}ViewModel mPageViewModel;

    public static final class Builder {
        Bundle bundle;

        public Builder() {
            bundle = new Bundle();
        }

        public Builder title(String val) {
            bundle.putString("title", val);
            return this;
        }

        public ${name} build() {
            ${name} dialog = new ${name}();
            // 自定义确定按钮文本
//          bundle.putString(KEY_CONFIRM_TEXT, "发送到直播间");
            dialog.setArguments(bundle);
            return dialog;
        }
    }

    @Override
    protected boolean supportMVVM() {
        return true;
    }

    @Override
    public JPBaseViewModel initViewModel() {
        mPageViewModel = getFragmentViewModel(${name}ViewModel.class);
//        mParentViewModel = getActivityViewModel(LiveCreateViewModel.class);
        return mPageViewModel;
    }

    @Override
    public JPDataBindingConfig initDataBindConfig() {
        return new JPDataBindingConfig(bindContentLayoutId())
                .addBindingParam(BR.vm, mPageViewModel)
                .addBindingParam(BR.click, new ClickProxy());
    }

    @Override
    public int bindContentLayoutId() {
        return R.layout.${layoutName};
    }

    @Override
    public void initData(@Nullable Bundle bundle, Bundle savedInstanceState) {
        // 获取listener
        mCallback = getDialogListener(this, I${name}Callback.class);
        Bundle arguments = getArguments();
        if(arguments != null) {
            // todo sample code, please delete it
            mPageViewModel.title.set(arguments.getString("title"));
        }
    }

    @Override
    public void bindData(Bundle savedInstanceState) {
        // todo LiveData数据监听例子，实际代码请删除
        setLiveDataObserver(mPageViewModel.name, s -> {
            ToastUtils.showToast(getContext(), "name has changed");
        });

        performRequest();
    }

    @Override
    protected void onConfirmClick() {
        if(mCallback != null) {
            mCallback.on${name}Callback();
        }
        super.onConfirmClick();
    }

    private void performRequest() {
        // todo perform net Requrest
        mPageViewModel.request.performRequest("xxx");
    }

    /**
     * 页面事件类，可以把所有事件都写在这里
     */
    public class ClickProxy {

        public void handleName() {
            ToastUtils.showToast(getContext(), "handleName: " + mPageViewModel.name.getValue());
        }

    }

}
