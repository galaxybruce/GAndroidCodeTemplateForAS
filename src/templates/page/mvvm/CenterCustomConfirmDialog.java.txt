
import android.os.Bundle;
import android.os.Parcelable;
import com.galaxybruce.component.ui.jetpack.JPDataBindingConfig;
import com.galaxybruce.component.ui.dialog.AppCustomConfirmDialog;
import com.galaxybruce.component.ui.dialog.AppDialogCallback;
import com.galaxybruce.component.util.ToastUtils;

${importR};
${importBR};
import ${package}.mvvm.viewmodel.${name}ViewModel;
import ${modulePackage}.databinding.${name}Binding;

import org.jetbrains.annotations.Nullable;

/**
 * @date
 * @author
 * @description (亲，我是做什么的)
 *
 * 使用方式：
 * new ${name}.Builder()
 *      .title("哈哈哈")
 *      .callback(new ${name}.I${name}Callback() {
 *          @Override
 *          public void on${name}Callback() {
 *          }
 *       })
 *      .build()
 *      .show(getSupportFragmentManager(), "${name}");
 *
 * <p>
 * modification history:
 */
public class ${name} extends AppCustomConfirmDialog<${name}ViewModel, ${name}Binding> {

    public interface I${name}Callback extends AppDialogCallback {
        void on${name}Callback();
    }

    I${name}Callback mCallback;

    public static final class Builder extends AppCustomConfirmDialog.Builder<Builder> {

        public Builder() {
            super();
        }

        public Builder callback(Parcelable value) {
            bundle.putParcelable("callback", value);
            return this;
        }

        public Builder title(String val) {
            bundle.putString("title", val);
            return this;
        }

        public ${name} build() {
            ${name} dialog = new ${name}();
            dialog.setArguments(bundle);
            return dialog;
        }
    }

    @Override
    protected boolean supportMVVM() {
        return true;
    }

    @Override
    public JPDataBindingConfig initDataBindConfig() {
        return new JPDataBindingConfig(bindContentLayoutId())
                .addBindingParam(BR.vm, mPageViewModel)
                .addBindingParam(BR.click, new ClickProxy());
    }

    @Override
    public int bindContentLayoutId() {
        return R.layout.${layoutName};
    }

    @Override
    public void initData(@Nullable Bundle bundle, Bundle savedInstanceState) {
        // 获取listener
        mCallback = getDialogListener(this, I${name}Callback.class);
        Bundle arguments = getArguments();
        if(arguments != null) {
            I${name}Callback tCallback = arguments.getParcelable("callback");
            if(tCallback != null) {
                mCallback = tCallback;
            }
            mPageViewModel.title.set(arguments.getString("title"));
        }
    }

    @Override
    public void bindData(Bundle savedInstanceState) {
        setLiveDataObserver(mPageViewModel.name, s -> {
            ToastUtils.showToast(getContext(), "name has changed");
        });

        performRequest();
    }

    @Override
    protected void onConfirmClick() {
        if(mCallback != null) {
            mCallback.on${name}Callback();
        }
        super.onConfirmClick();
    }

    private void performRequest() {
        mPageViewModel.request.performRequest();
    }

    /**
     * 页面事件类，可以把所有事件都写在这里
     */
    public class ClickProxy {

        public void onTestClick() {
            ToastUtils.showToast(getContext(), "onTestClick: " + mPageViewModel.name.getValue());
        }

    }

}
