
import android.content.Context
import android.os.Bundle
import android.view.View

import androidx.databinding.ViewDataBinding

import com.alibaba.android.arouter.facade.annotation.Route
import com.galaxybruce.component.ui.jetpack.JPBaseActivityV2
import com.galaxybruce.component.ui.jetpack.JPDataBindingConfig
import com.galaxybruce.component.ui.jetpack.adapter.JPRecyclerViewLoadMoreAdapter
import com.galaxybruce.component.util.ToastUtils
import com.galaxybruce.component.util.extensions.click

import com.galaxybruce.component.ui.view.recyclerview.AbsAppRecyclerView.AppRequestListener
import com.galaxybruce.component.ui.view.recyclerview.AppRecyclerView2

${importR}
${importBR}
import ${package}.mvvm.viewmodel.${name}ViewModel
import ${modulePackage}.databinding.${name}ItemLayoutBinding
import ${modulePackage}.databinding.${name}LayoutBinding


@Route(path = "xxx")
class ${name}Activity : JPBaseActivityV2<${name}ViewModel, ${name}LayoutBinding>() {

    override fun initDataBindConfig(): JPDataBindingConfig {
        return JPDataBindingConfig(bindLayoutId())
            .addBindingParam(BR.vm, mPageViewModel)
    }

    override fun bindTitle(): String {
        return "${name}Activity"
    }

    override fun bindLayoutId(): Int {
        return R.layout.${layoutName}
    }

    override fun initData(bundle: Bundle?, savedInstanceState: Bundle?) {
        super.initData(bundle, savedInstanceState)
    }

    override fun initView(view: View?) {
        super.initView(view)

        val realBinding = binding
        val appRecyclerView: AppRecyclerView2<String> = realBinding.appRecyclerView as AppRecyclerView2<String>
        appRecyclerView.setAdapter(InnerAdapter(mActivity)) //.setNeedShowEmptyNoData(false)
            .setPullRefreshEnable(true)
            .setRequestDataIfViewCreated(false)
            .setNeedShowLoadingView(false)
            .setInitPage(1)
//                .setNoDataContent("暂无数据～")
//                .setNoDataImage(R.drawable.live_lottery_list_empty_icon)
//                .setRecyclerViewPadding(new Rect(0, DensityUtil.dp2px(12f), 0, DensityUtil.dp2px(12f)))
//                .addItemDecoration(SpacesItemDecoration(0, DensityUtil.dp2px(10f)))
            .setRequestListener(object : AppRequestListener {
                override fun sendRequestData(refresh: Boolean, page: Int) {
                    performRequest()
                }

                override fun sendRequestLoadMoreData(page: Int) {
                    performRequest()
                }
            }).create()
    }

    override fun bindData(savedInstanceState: Bundle?) {
        super.bindData(savedInstanceState)

        // 页面重建时，判断是否有数据，没有数据才发送请求
        if (mPageViewModel.listData.value?.list.isNullOrEmpty()) {
            binding.appRecyclerView.requestDataWithLoading()
        }
    }

    private fun performRequest() {
        mPageViewModel.request.performRequest()
    }

    private inner class InnerAdapter(context: Context?) : JPRecyclerViewLoadMoreAdapter<String>(context) {

        override fun getLayoutId(viewType: Int): Int {
            return if (viewType == DEFAULT_REAL_ITEM_VIEW_TYPE) {
                R.layout.${itemLayoutName}
            } else {
                super.getLayoutId(viewType)
            }
        }

        override fun onBindItem(binding: ViewDataBinding, dataPosition: Int) {
            if (binding is ${name}ItemLayoutBinding) {
                val itemInfo = data[dataPosition]
                binding.vm = itemInfo
                binding.tvName.click {
                    ToastUtils.showToast(mContext, "click item: $itemInfo"
                    )
                }
            }
        }

    }

}