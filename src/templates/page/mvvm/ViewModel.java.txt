
import androidx.databinding.ObservableField;
import androidx.lifecycle.MutableLiveData;

import com.galaxybruce.component.ui.jetpack.JPBaseRequest;
import com.galaxybruce.component.ui.jetpack.JPBaseViewModel;

import org.jetbrains.annotations.Nullable;

import java.util.ArrayList;
import java.util.List;

import ${package}.mvvm.request.${name}Request;

public class ${name}ViewModel extends JPBaseViewModel {

    // ObservableField 有防抖的特点, 防抖可以避免重复刷新 以减少不必要的性能开销，所以看情况选择 ObservableField 或 LiveData。
    public final ObservableField<String> title = new ObservableField<>();
    public final MutableLiveData<String> name = new MutableLiveData<>();

    public final ${name}Request request = new ${name}Request(this);

    @Nullable
    @Override
    public List<JPBaseRequest> getRequests() {
        List<JPBaseRequest> list = new ArrayList<>(1);
        list.add(request);
        return list;
    }


    {
        name.setValue("初始化数据");
    }

}
